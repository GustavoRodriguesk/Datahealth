generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model session {
  id         Int      @id @default(autoincrement())
  token      String   @unique @db.VarChar(700)
  user_id    Int
  updated_at DateTime @updatedAt
  user       user     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([user_id], map: "session_user_id_fkey")
}

model user {
  id          Int          @id @default(autoincrement())
  public_id   String       @unique @db.VarChar(256)
  name        String       @db.VarChar(100)
  email       String       @unique @db.VarChar(200)
  age         Int
  gender      String
  blood_type  String        @db.VarChar(10) 
  ethnicity   String        @db.VarChar(50)
  pass        String        @db.VarChar(256)
  avatar      String?       @db.VarChar(1000)
  medications medication[]
  records     record[]
  sessions    session[]
}

model Doctor {
  id             Int     @id @default(autoincrement())
  name           String  @db.VarChar(100)
  email          String  @unique @db.VarChar(200)
  age            Int
  gender         String
  specialization String  @db.VarChar(100)
  avatar         String? @db.VarChar(1000)
}

model record {
  id      Int      @id @default(autoincrement())
  report  String   @db.VarChar(255)
  exam    String   @db.VarChar(255)
  recipe  String?  @db.VarChar(1000)
  user_id Int
  date    DateTime
  user    user     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([user_id], map: "record_user_id_fkey")
}

model medication {
  id          Int     @id @default(autoincrement())
  medicine    String  @db.VarChar(255)
  description String  @db.VarChar(255)
  image       String? @db.VarChar(1000)
  user_id     Int
  period      Int
  user        user    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([user_id], map: "medication_user_id_fkey")
}