generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model session {
  id         Int      @id @default(autoincrement())
  token      String   @unique @db.VarChar(700)
  user_id    Int
  updated_at DateTime @updatedAt
  user       user     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "session_user_id_fk") // Nome ajustado

  @@index([user_id], map: "session_user_id_idx")
}


model user {
  id                 Int       @id @default(autoincrement())
  public_id          String    @unique @db.VarChar(256)
  name               String    @db.VarChar(100)
  email              String    @unique @db.VarChar(200)
  phone              String?   @db.VarChar(20)
  address            String?   @db.VarChar(255)
  age                Int
  birth_date         DateTime?
  gender             String
  marital_status     String?   @db.VarChar(50)
  blood_type         String?
  ethnicity          String
  height             Decimal?  @db.Decimal(5, 2) 
  weight             Decimal?  @db.Decimal(5, 2) 
  chronic_conditions String?   @db.VarChar(500)
  allergies          String?   @db.VarChar(500)
  emergency_contact  String?   @db.VarChar(100)
  insurance_provider String?   @db.VarChar(200)
  insurance_number   String?   @db.VarChar(50)
  smoker             Boolean?  @default(false)
  pregnancy_status   String?   @db.VarChar(50)
  avatar             String?   @db.VarChar(1000)
  pass               String    @db.VarChar(256)
  registered_by      Int?
  session            session[]
  medication         medication[]
  record             record[]
}

model Doctor {
  id              Int     @id @default(autoincrement())
  public_id       String  @unique @db.VarChar(256)
  name            String  @db.VarChar(100)
  email           String  @unique @db.VarChar(200)
  age             Int
  gender          String
  specialization  String
  avatar          String? @db.VarChar(1000)
}

model record {
  id      Int      @id @default(autoincrement())
  report  String   @db.VarChar(255)
  exam    String   @db.VarChar(255)
  recipe  String?  @db.VarChar(1000)
  user_id Int
  date    DateTime
  user    user     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "record_user_fk")

  @@index([user_id], map: "record_user_id_fkey")
}

model medication {
  id          Int     @id @default(autoincrement())
  medicine    String  @db.VarChar(255)
  description String  @db.VarChar(255)
  image       String? @db.VarChar(1000)
  user_id     Int
  period      Int
  user        user    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "medication_user_fk")

  @@index([user_id], map: "medication_user_id_fkey")
}